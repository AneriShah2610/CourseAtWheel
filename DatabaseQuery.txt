				MySQL	
User
CREATE TABLE `courseatwheel`.`user` (
  `user_id` VARCHAR(30) NOT NULL,
  `fname` VARCHAR(15) NOT NULL,
  `lname` VARCHAR(15) NOT NULL,
  `email` VARCHAR(40) NOT NULL,
  `contact` VARCHAR(15) NOT NULL,
  `password` VARCHAR(20) NOT NULL,
  `user_type` VARCHAR(20) NOT NULL,
  `join_date` DATE NOT NULL,
  `country_id` INT NULL,
  `state_id` INT(5) NULL,
  `city_name` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`user_id`));


Sub Category 
CREATE TABLE `courseatwheel`.`course_sub_category` (
  `course_sub_category_id` INT(5) NOT NULL AUTO_INCREMENT,
  `course_sub_category_name` VARCHAR(30) NULL,
  PRIMARY KEY (`course_sub_category_id`));


Category
CREATE TABLE `courseatwheel`.`course_category` (
  `course_category_id` INT(5) NOT NULL AUTO_INCREMENT,
  `course_category_name` VARCHAR(45) NOT NULL,
  `course_sub_category_id` INT(5) NOT NULL,
  `course_sub_category_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`course_category_id`));


Course
CREATE TABLE `courseatwheel`.`course` (
  `course_id` INT(10) NOT NULL AUTO INCREMENT,
  `course_name` VARCHAR(40) NOT NULL,
  `course_category_id` INT(5) NOT NULL,
  `course_sub_category_name` VARCHAR(20) NOT NULL,
  `description` VARCHAR(200) NOT NULL,
  `course_type` VARCHAR(20) NOT NULL,
  `ctype` VARCHAR(20) NOT NULL,
  `user_id` VARCHAR(30) NOT NULL,
  `course_image` VARCHAR(500) NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`course_id`));

Country
CREATE TABLE `courseatwheel`.`country` (
  `country_id` INT(10) NOT NULL,
  `country_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`country_id`));


State
CREATE TABLE `courseatwheel`.`state` (
  `state_id` INT(10) NOT NULL,
  `country_id` INT(10) NOT NULL,
  `country_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`state_id`));


City
CREATE TABLE `courseatwheel`.`city` (
  `city_id` INT(10) NOT NULL,
  `state_id` INT(10) NOT NULL,
  `city_name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`city_id`));


Trainerview
CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `trainerview` AS
    SELECT 
        `user`.`user_id` AS `user_id`,
        `user`.`fname` AS `fname`,
        `user`.`lname` AS `lname`,
        `user`.`email` AS `email`,
        `user`.`contact` AS `contact`,
        `user`.`join_date` AS `join_date`,
        `country`.`country_name` AS `country_name`,
        `state`.`state_name` AS `state_name`,
        `user`.`city_name` AS `city_name`,
        `user`.`status` AS `status`
    FROM
        ((`user`
        JOIN `country`)
        JOIN `state`)
    WHERE
        ((`user`.`user_type` = 'trainer')
            AND (`user`.`country_id` = `country`.`country_id`)
  AND (`user`.`state_id` = `state`.`state_id`))

NoviceView
USE `courseatwheel`;
CREATE  OR REPLACE VIEW `novice view` AS 
select user_id,fname,lname,email,contact,join_date from courseatwheel.user 
where user_type='novice';


Topic
CREATE TABLE `courseatwheel`.`topic` (
  `topic_id` INT(10) NOT NULL AUTO_INCREMENT,
  `course_id` INT(10) NOT NULL,
  `user_id` VARCHAR(30) NOT NULL,
  `topic_name` VARCHAR(45) NOT NULL,
  `topic_description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`topic_id`));

CourseTopicView
CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `coursetopicview` AS
    SELECT 
        `course`.`course_id` AS `course_id`,
        `course`.`course_name` AS `course_name`,
        `topic`.`topic_id` AS `topic_id`,
        `topic`.`topic_name` AS `topic_name`,
        `topic`.`topic_description` AS `topic_description`,
        `topic`.`user_id` AS `user_id`
    FROM
        ((`course`
        JOIN `topic`)
        JOIN `user`)
    WHERE
        ((`topic`.`course_id` = `course`.`course_id`)
            AND (`topic`.`user_id` = `user`.`user_id`));

CourseCategoryView
CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `coursecategoryview` AS
    SELECT 
        `course`.`course_id` AS `course_id`,
        `course`.`course_name` AS `course_name`,
        `course_category`.`course_category_name` AS `course_category_name`,
        `course`.`course_sub_category_name` AS `course_sub_category_name`,
        `course`.`description` AS `description`,
        `course`.`course_type` AS `course_type`,
        `course`.`ctype` AS `ctype`,
        `course`.`user_id` AS `user_id`,
        `course`.`course_image` AS `course_image`,
        `course`.`date` AS `date`
    FROM
        (`course`
        JOIN `course_category`)
    WHERE
        (`course`.`course_category_id` = `course_category`.`course_category_id`)

Lecture
CREATE TABLE `courseatwheel`.`lecture` (
  `lecture_id` INT(10) NOT NULL AUTO_INCREMENT,
  `lecture_name` VARCHAR(30) NULL,
  `lecture_file` VARCHAR(4000) NOT NULL,
  `course_id` INT(10) NOT NULL,
  `topic_id` INT(10) NOT NULL,
  `user_id` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`lecture_id`));


courselecview
USE `courseatwheel`;
CREATE  OR REPLACE VIEW `courselecview` AS
select course.course_id,course_name,topic.topic_id,topic_name,lecture.lecture_id,lecture_name,lecture_file,user.user_id
from courseatwheel.course,courseatwheel.topic,courseatwheel.lecture,courseatwheel.user
where course.course_id=lecture.course_id and topic.topic_id=lecture.topic_id and user.user_id=lecture.user_id;
courseatwheel.user,courseatwheel.course,courseatwheel.topic,courseatwheel.lecture 
where course.course_id=lecture.course_id and topic.topic_id=lecture.topic_id and user.user_id=lecture.user_id;

course_novice
CREATE TABLE `courseatwheel`.`course_novice` (
  `course_novice_id` INT(5) NOT NULL AUTO_INCREMENT,
  `course_id` INT(5) NOT NULL,
  `course_name` VARCHAR(40) NOT NULL,
  `novice_id` VARCHAR(30) NOT NULL,
  `trainer_id` VARCHAR(30) NOT NULL,
  `join_date` DATE NOT NULL,
  `completion_date` DATE ,
  `status` VARCHAR(25) NOT NULL,
  `course_image` VARCHAR(2000) NOT NULL,
  PRIMARY KEY (`course_novice_id`));


tutorial
CREATE TABLE `courseatwheel`.`tutorial` (
  `tutorial_id` INT(10) NOT NULL AUTO_INCREMENT,
  `tutorial_file` VARCHAR(50) NOT NULL,
  `course_id` INT(10) NOT NULL,
  `topic_id` INT(10) NOT NULL,
  `lecture_id` INT(10) NOT NULL,
  `trainer_id` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`tutorial_id`));


exam
CREATE TABLE `courseatwheel`.`exam` (
  `exam_id` INT(10) NOT NULL AUTO_INCREMENT,
  `exam_file` VARCHAR(100) NOT NULL,
  `trainer_id` VARCHAR(30) NOT NULL,
  `course_id` INT(10) NOT NULL,
  PRIMARY KEY (`exam_id`),
  INDEX `course_id_idx` (`course_id` ASC),
  CONSTRAINT `course_id`
    FOREIGN KEY (`course_id`)
    REFERENCES `courseatwheel`.`course` (`course_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


coursetutorialview
CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `coursetutorial` AS
    SELECT 
        `tutorial`.`tutorial_id` AS `tutorial_id`,
        `tutorial`.`tutorial_file` AS `tutorial_file`,
        `course`.`course_id` AS `course_id`,
        `course`.`course_name` AS `course_name`,
        `topic`.`topic_id` AS `topic_id`,
        `topic`.`topic_name` AS `topic_name`,
        `lecture`.`lecture_id` AS `lecture_id`,
        `lecture`.`lecture_name` AS `lecture_name`,
        `tutorial`.`trainer_id` AS `trainer_id`
    FROM
        ((((`course`
        JOIN `topic`)
        JOIN `lecture`)
        JOIN `user`)
        JOIN `tutorial`)
    WHERE
        ((`course`.`course_id` = `tutorial`.`course_id`)
            AND (`topic`.`topic_id` = `tutorial`.`topic_id`)
            AND (`lecture`.`lecture_id` = `tutorial`.`lecture_id`));

courseview
CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `courseview` AS
    SELECT 
        `course`.`course_id` AS `course_id`,
        `course`.`course_name` AS `course_name`,
        `course`.`description` AS `description`,
        `course`.`course_image` AS `course_image`,
        `topic`.`topic_id` AS `topic_id`,
        `topic`.`topic_name` AS `topic_name`,
        `topic`.`topic_description` AS `topic_description`,
        `lecture`.`lecture_id` AS `lecture_id`,
        `lecture`.`lecture_name` AS `lecture_name`,
        `lecture`.`lecture_file` AS `lecture_file`,
        `tutorial`.`tutorial_id` AS `tutorial_id`,
        `tutorial`.`tutorial_file` AS `tutorial_file`,
        `course_novice`.`course_novice_id` AS `course_novice_id`,
        `course_novice`.`trainer_id` AS `trainer_id`,
        `course_novice`.`novice_id` AS `novice_id`,
        `course_novice`.`join_date` AS `join_date`,
        `course_novice`.`completion_date` AS `completion_date`,
        `course_novice`.`status` AS `status`,
        `user`.`user_id` AS `user_id`
    FROM
        (((((`user`
        JOIN `course`)
        JOIN `topic`)
        JOIN `lecture`)
        JOIN `tutorial`)
        JOIN `course_novice`)
    WHERE
        ((`course`.`course_id` = `course_novice`.`course_id`)
            AND (`topic`.`course_id` = `course`.`course_id`)
            AND (`lecture`.`topic_id` = `topic`.`topic_id`)
            AND (`tutorial`.`lecture_id` = `lecture`.`lecture_id`)
            AND (`course_novice`.`trainer_id` = `course`.`user_id`))

quiz
CREATE TABLE `courseatwheel`.`quiz` (
  `quiz_id` INT(10) NOT NULL AUTO_INCREMENT,
 `quiz_name` VARCHAR(45)  NULL ,
  `course_id` INT(10) NOT NULL,
  `topic_id` INT(10) NOT NULL,
  `lecture_id` INT(10) NULL,
  PRIMARY KEY (`quiz_id`));


assignment
CREATE TABLE `courseatwheel`.`assignment` (
  `assignment_id` INT(10) NOT NULL AUTO_INCREMENT,
  `assignment_file` VARCHAR(45) NULL,
  `question` VARCHAR(100) NULL,
  `option1` VARCHAR(50) NULL,
  `option2` VARCHAR(50) NULL,
  `option3` VARCHAR(50) NULL,
  `option4` VARCHAR(50) NULL,
  `answer` VARCHAR(50) NULL,
  `course_id` INT(10) NULL,
  `topic_id` INT(10) NULL,
  `leture_id` INT(10) NULL,
  PRIMARY KEY (`assignment_id`));


quiz_details
CREATE TABLE `courseatwheel`.`quiz_details` (
  `quest_id` INT(10) NOT NULL,
  `question` VARCHAR(150) NOT NULL,
  `option1` VARCHAR(50) NOT NULL,
  `option2` VARCHAR(50) NOT NULL,
  `option3` VARCHAR(50) NOT NULL,
  `option4` VARCHAR(50) NOT NULL,
  `answer` VARCHAR(50) NOT NULL,
  `quiz_id` INT(10) NOT NULL,
  PRIMARY KEY (`quest_id`));


quizview
CREATE 
    ALGORITHM = UNDEFINED 
    DEFINER = `root`@`localhost` 
    SQL SECURITY DEFINER
VIEW `quizview` AS
    SELECT 
        `quiz_details`.`quiz_id` AS `quiz_id`,
        `quiz`.`quiz_name` AS `quiz_name`,
        `quiz_details`.`question_id` AS `question_id`,
        `quiz_details`.`question` AS `question`,
        `quiz_details`.`option1` AS `option1`,
        `quiz_details`.`option2` AS `option2`,
        `quiz_details`.`option3` AS `option3`,
        `quiz_details`.`option4` AS `option4`,
        `quiz_details`.`answer` AS `answer`,
        `quiz`.`course_id` AS `course_id`,
        `quiz`.`topic_id` AS `topic_id`,
        `quiz`.`lecture_id` AS `lecture_id`,
        `quiz`.`user_id` AS `user_id`,
        `courselecview`.`lecture_name` AS `lecture_name`,
        `courselecview`.`topic_name` AS `topic_name`,
        `courselecview`.`course_name` AS `course_name`
    FROM
        (((`user`
        JOIN `quiz`)
        JOIN `quiz_details`)
        JOIN `courselecview`)
    WHERE
        ((`quiz`.`user_id` = `user`.`user_id`)
            AND (`quiz`.`quiz_id` = `quiz_details`.`quiz_id`)
            AND (`quiz`.`lecture_id` = `courselecview`.`lecture_id`)
            AND (`quiz`.`topic_id` = `courselecview`.`topic_id`)
            AND (`quiz`.`course_id` = `courselecview`.`course_id`))